tags:
- name: users
  description: users API
- name: employees
  description: employees API

paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] employees
  /employee/{agencyId}:
    post:
      tags:
      - employees
      summary: Add employee to agency Id
      parameters:
      - name: agencyId
        in: path
        description: Agency Id
        required: true
      - name: body
        in: body
        description: employee Data
        required: true
        schema:
          $ref: '#/definitions/employees'
        responses:
          200: 
            description: 'OK'
          404:
            description: 'Agency not found'
          409: 
            description: 'User already registered'
          500: 
            description: 'Something went wrong/Server Error'

# [GET] Get employees of an agency
  /employees/{agencyId}:
    get:
      tags: 
      - employees
      summary: Get all employees of an agency
      parameters: 
      - name: agencyId
        in: path
        description: Agency Id
        required: true
        responses:
          200: 
            description: 'OK'
          500: 
            description: 'Something went wrong/Server Error'

# [GET] Get employee via the employeeId
  /employee/{employeeId}:
    get:
      tags: 
      - employees
      summary: Get specific employee
      parameters: 
      - name: employeeId
        in: path
        description: Employee Id
        required: true
        responses:
          200: 
            description: 'OK'
          500: 
            description: 'Something went wrong/Server Error'

# [PUT] employees
  /employee/{employeeID}: #using ID - to be unique map.
    put:
      tags:
      - employees
      summary: update employee details
      parameters:
      - name: employeeID
        in: path
        description: employee ID
        required: true
      - name: body
        in: body
        description: employee Data
        required: true
        schema:
          $ref: '#/definitions/employees'
        responses:
          200: 
            description: 'OK'
          404:
            description: 'Employee not found'
          500: 
            description: 'Something went wrong/Server Error'

# [DEL] employees
  /employee:
    delete:
      tags: 
      - employees
      summary: delete all employees whose ids are provided in body
      parameters:
      - name: employeeIds
        in: body
        description: employeeIds in array
        required: true
        schema:
          type: object
          properties: 
            employeeIds:
              type: array
              items:
                type: string
        responses:
          200: 
            description: 'OK'
          404:
            description: 'Employee not found'
          500: 
            description: 'Something went wrong/Server Error'

# [PUT] employees
  /employee/role/{employeeID}: #using ID - to be unique map.
    put:
      tags:
      - employees
      summary: assign employee role
      parameters:
      - name: employeeID
        in: path
        description: employee ID
        required: true
      - name: body
        in: body
        description: Role Data
        required: true
        schema:
          type: object
          properties:
            role:
              type: string
              items:
                enum: ['chatter', 'manager', 'admin']
        responses:
          200: 
            description: 'OK'
          404:
            description: 'Employee not found'
          500: 
            description: 'Something went wrong/Server Error'

# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password

  employees:
    type: object
    required: 
        - employeeEmail
        - employeeName
        - agencyId
    properties:
      employeeEmail: 
        type: string
        description: employee Email
      employeeName: 
        type: string
        description: employee name
      agencyId: 
        type: ObjectID
        description: Agency id
      role: 
        type: string
        enum: ['manager', 'admin', 'chatter']
        description: 'employee role'

schemes:
 - https
 - http
